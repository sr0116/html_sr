// 💡 1. 사용자 카드 생성기
// 설명:
// 이름, 나이, 직업을 입력하면 "사용자 카드"가 생성되고, 버튼을 눌러 다른 사용자도 계속 추가 가능.

// 활용되는 개념: function (카드 만드는 선언적 함수), 객체 리터럴로 사용자 정보 저장

// 생성자 함수로 사용자 객체 생성 가능

// 파라미터, 아규먼트, 리턴

// innerHTML로 사용자 카드 출력

// const, let 차이 연습

// HTML 폼 / 버튼 / CSS 카드 스타일링



// 💡 2. 나만의 계산기
// 설명:
// 두 수를 입력하고 +, -, *, / 중 하나를 클릭하면 결과가 나옴.
// 버튼 클릭 시 익명 함수로 처리.

// 활용되는 개념:

// 익명 함수, 선언적 함수 비교

// 파라미터, 아규먼트, 리턴

// var, let, const 스코프 실습

// 호이스팅: 선언 위치에 따라 오류 유도해보기

// HTML 숫자 입력 / 버튼 / 결과 출력

// CSS로 버튼 스타일링

// 💡 3. 색상 바꾸기 앱 (객체 활용)
// 설명:
// 색상 버튼을 클릭하면 배경색이 바뀌는데, 색상 정보는 객체로 저장되어 있고, 클릭할 때 객체의 값을 수정할 수 있음.

// 활용되는 개념:

// 객체 리터럴로 색상 저장

// 버튼 클릭 → 객체의 값 변경

// const로 객체 선언 후 내부 속성 변경

// addEventListener + 익명 함수

// HTML: 버튼, 박스 영역

// CSS: 배경색, 마진, 패딩

// 💡 4. 사용자 리스트 저장/삭제 시스템
// 설명:
// 사용자 이름을 입력하고 "추가" 버튼을 누르면 사용자 리스트에 추가. 삭제 버튼을 누르면 제거됨.

// 활용되는 개념:

// 배열 + 객체 리터럴 조합

// 사용자마다 { name: "홍길동" } 형식 저장

// push, splice로 배열 관리

// for문 or forEach로 렌더링

// let, const, 스코프 비교

// HTML 리스트 + 삭제 버튼

// CSS로 리스트 스타일 (hover 등)

// 💡 5. 나만의 알림 문구 생성기
// 설명:
// 버튼을 누르면 랜덤한 알림 문구가 화면에 출력되는데, 이 문구들은 객체에 저장되어 있고, 함수로 조합되어 출력됨.

// 활용되는 개념:

// 객체에서 속성 조합

// 함수 리턴, 파라미터, 아규먼트

// 선언적 함수, 익명 함수

// innerHTML 출력

// CSS 애니메이션 효과 살짝 추가해도 좋음
// // 